from telegram.ext import ApplicationBuilder, MessageHandler, CommandHandler, filters
import random

TOKEN = "8279651212:AAEuwK2AWNxxUOLz1qsGGNwmUeW2GAJeJmk"
songs = []

async def start(update, context):
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! üéµ –°–∫–∏–¥–∞–π –º–µ–Ω—ñ –ø—ñ—Å–Ω—ñ (–∞—É–¥—ñ–æ, –≥–æ–ª–æ—Å–æ–≤—ñ –∞–±–æ —Ñ–∞–π–ª–∏), –∞ –∫–æ–ª–∏ –∑–∞–∫—ñ–Ω—á–∏—à ‚Äî –Ω–∞–ø–∏—à–∏ /shuffle"
    )

async def save_song(update, context):
    if update.message.audio:
        songs.append(update.message.audio.file_id)
        title = update.message.audio.title or "–ë–µ–∑ –Ω–∞–∑–≤–∏"
    elif update.message.voice:
        songs.append(update.message.voice.file_id)
        title = "–ì–æ–ª–æ—Å–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"
    elif update.message.document:
        if update.message.document.mime_type.startswith("audio"):
            songs.append(update.message.document.file_id)
            title = update.message.document.file_name or "–ê—É–¥—ñ–æ—Ñ–∞–π–ª"
        else:
            await update.message.reply_text("–¶–µ –Ω–µ –∞—É–¥—ñ–æ, –±—É–¥—å –ª–∞—Å–∫–∞ —Å–∫–∏–¥–∞–π —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–Ω—ñ.")
            return
    else:
        await update.message.reply_text("–ù–µ –º–æ–∂—É –∑–±–µ—Ä–µ–≥—Ç–∏ —Ü–µ–π —Ñ–∞–π–ª, —Å–∫–∏–¥–∞–π –∞—É–¥—ñ–æ —á–∏ –≥–æ–ª–æ—Å–æ–≤–µ.")
        return
    await update.message.reply_text(f"–î–æ–¥–∞–≤ –ø—ñ—Å–Ω—é: {title}")

async def shuffle_songs(update, context):
    if not songs:
        await update.message.reply_text("–¢–∏ —â–µ –Ω–µ —Å–∫–∏–Ω—É–≤ –∂–æ–¥–Ω–æ—ó –ø—ñ—Å–Ω—ñ!")
        return
    random.shuffle(songs)
    await update.message.reply_text("–û—Å—å —Ç–≤—ñ–π –ø–µ—Ä–µ–º—ñ—à–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫ üé∂")
    for file_id in songs:
        await context.bot.send_audio(chat_id=update.effective_chat.id, audio=file_id)
    songs.clear()

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("shuffle", shuffle_songs))
app.add_handler(MessageHandler(filters.AUDIO | filters.VOICE | filters.Document.MIME("audio/*"), save_song))

app.run_polling()

